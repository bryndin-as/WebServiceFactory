// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebServiceFactoryInfrastructure.Database;

#nullable disable

namespace WebServiceFactoryInfrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240814132711_InitCreateTables")]
    partial class InitCreateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebServiceFactoryInfrastructure.Entities.EquipmentGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TechUnitId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TechUnitId");

                    b.ToTable("EquipmentGroups");
                });

            modelBuilder.Entity("WebServiceFactoryInfrastructure.Entities.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RegionId")
                        .HasColumnType("integer");

                    b.Property<string>("ShortTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("WebServiceFactoryInfrastructure.Entities.Hardware", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EquipmentGroupId")
                        .HasColumnType("integer");

                    b.Property<int>("HardwareTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Read")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentGroupId");

                    b.HasIndex("HardwareTypeId");

                    b.ToTable("Hardwares");
                });

            modelBuilder.Entity("WebServiceFactoryInfrastructure.Entities.HardwareType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HardwareTypes");
                });

            modelBuilder.Entity("WebServiceFactoryInfrastructure.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("WebServiceFactoryInfrastructure.Entities.TechUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FacilityId")
                        .HasColumnType("integer");

                    b.Property<string>("ShortTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("TechUnits");
                });

            modelBuilder.Entity("WebServiceFactoryInfrastructure.Entities.EquipmentGroup", b =>
                {
                    b.HasOne("WebServiceFactoryInfrastructure.Entities.TechUnit", "TechUnit")
                        .WithMany("EquipmentGroups")
                        .HasForeignKey("TechUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TechUnit");
                });

            modelBuilder.Entity("WebServiceFactoryInfrastructure.Entities.Facility", b =>
                {
                    b.HasOne("WebServiceFactoryInfrastructure.Entities.Region", "Region")
                        .WithMany("Facilities")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("WebServiceFactoryInfrastructure.Entities.Hardware", b =>
                {
                    b.HasOne("WebServiceFactoryInfrastructure.Entities.EquipmentGroup", "EquipmentGroup")
                        .WithMany("Hardwares")
                        .HasForeignKey("EquipmentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebServiceFactoryInfrastructure.Entities.HardwareType", "HardwareType")
                        .WithMany("Hardwares")
                        .HasForeignKey("HardwareTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentGroup");

                    b.Navigation("HardwareType");
                });

            modelBuilder.Entity("WebServiceFactoryInfrastructure.Entities.TechUnit", b =>
                {
                    b.HasOne("WebServiceFactoryInfrastructure.Entities.Facility", "Facility")
                        .WithMany("TechUnits")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("WebServiceFactoryInfrastructure.Entities.EquipmentGroup", b =>
                {
                    b.Navigation("Hardwares");
                });

            modelBuilder.Entity("WebServiceFactoryInfrastructure.Entities.Facility", b =>
                {
                    b.Navigation("TechUnits");
                });

            modelBuilder.Entity("WebServiceFactoryInfrastructure.Entities.HardwareType", b =>
                {
                    b.Navigation("Hardwares");
                });

            modelBuilder.Entity("WebServiceFactoryInfrastructure.Entities.Region", b =>
                {
                    b.Navigation("Facilities");
                });

            modelBuilder.Entity("WebServiceFactoryInfrastructure.Entities.TechUnit", b =>
                {
                    b.Navigation("EquipmentGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
